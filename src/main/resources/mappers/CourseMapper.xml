<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="inflearn_clone.springboot.mappers.CourseMapper">
    <!-- 강좌 리스트 조회 -->
    <select id="courseList" resultType="inflearn_clone.springboot.domain.CourseVO">
        SELECT
            idx, category, title, description, teacherId, regDate, displayDate, status, price, thumbnail
        FROM tbl_course
        WHERE status = 'Y'
        ORDER BY regDate DESC;
    </select>

    <select id="courseView" parameterType="int" resultType="inflearn_clone.springboot.domain.CourseVO">
        SELECT
            idx, category, title, description, teacherId, regDate, displayDate, modifyDate, price, thumbnail
        FROM tbl_course
        WHERE idx = #{idx} AND status = 'Y';
    </select>

    <!--teacherId로 존재하는 강의가 있는지 확인-->
    <select id="selectCourseByMemberId" resultType="Integer">
        SELECT idx
        FROM tbl_course
        WHERE teacherId = #{teacherId};
    </select>

    <!--teacherId에 해당하는 강의 비활성화로 변경-->
    <update id="deleteCourseByMemberId">
        UPDATE tbl_course
        SET status = 'N'
        WHERE teacherId = #{teacherId} AND status = 'Y';
    </update>

    <!-- 강의 삭제 날짜 업데이트-->
    <update id="updateDeleteDate">
        UPDATE tbl_course
        SET deleteDate = #{deleteDate}, status = 'R'
        WHERE idx = #{idx}
    </update>

    <select id="findCoursesToDeleted" resultType="int">
        SELECT idx
        FROM tbl_course
        WHERE deleteDate &lt;= #{now}
        AND status != 'D';
    </select>

    <!-- 강좌 상태 업데이트(스케쥴러 사용) -->
    <update id="updateCourseStatusToDeleted">
        UPDATE tbl_course
        SET status = 'D'
        WHERE deleteDate  &lt;= #{now}
        AND status != 'D'
    </update>

    <!-- 강좌 상태 업데이트(삭제) -->
    <update id="deleteCourse">
        UPDATE tbl_course
        SET status = 'D'
        WHERE idx = #{idx}
    </update>

    <!-- 카테고리 별 강좌 수 -->
    <select id="categoryTotalCnt" resultType="int">
        SELECT COUNT(*)
        FROM tbl_course
        WHERE category = #{category} AND status = 'Y'
    </select>

    <!-- 타입 별 강좌 수 조회 -->
    <select id="allCourseListTotalCnt" resultType="int">
        SELECT COUNT(*)
        FROM tbl_course
        <where>
            <if test="searchCategory != null and searchValue != null">
                <choose>
                    <when test="searchCategory == 'memberId'">
                        memberId LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test="searchCategory == 'name'">
                        `name` LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                </choose>
            </if>
            AND status = #{status}
        </where>
    </select>
    <!-- 강좌 리스트 전체 조회(활성, 비활성, 탈퇴)-->
    <select id="allCourseList" resultType="inflearn_clone.springboot.domain.CourseVO">
        SELECT
            idx, category, title, description, teacherId, regDate, displayDate, status, price, thumbnail
        FROM tbl_course
        <where>
            <if test="searchCategory != null and searchValue != null">
                <choose>
                    <when test="searchCategory == 'title'">
                        memberId LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                    <when test="searchCategory == 'teacherId'">
                        `name` LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                </choose>
            </if>
        </where>
        ${sortQuery}
        LIMIT #{offset}, #{limit}
    </select>

    <select id="courseView1" resultType="inflearn_clone.springboot.domain.CourseVO">
        SELECT idx, category, title, description, teacherId, regDate, displayDate, status, price, thumbnail
        FROM tbl_course
        WHERE idx = #{idx}

    </select>

    <select id="courseTotalCnt" resultType="int">
        SELECT COUNT(*)
        FROM tbl_course
        <where>
            <if test="searchCategory != null and searchCategory != ''">
                category = #{searchCategory}
            </if>
            <if test="searchValue != null and searchValue != ''">
                AND (
                title LIKE CONCAT('%', #{searchValue}, '%') OR
                teacherId LIKE CONCAT('%', #{searchValue}, '%')
                )
            </if>
        </where>
    </select>

    <select id="selectAllCourse" resultType="inflearn_clone.springboot.domain.CourseVO">
        SELECT
        idx, category, title, description, teacherId, regDate, displayDate, status, price, thumbnail
        FROM tbl_course
        <where>
            <if test="searchCategory != null and searchCategory != ''">
                category = #{searchCategory}
            </if>
            <if test="searchValue != null and searchValue != ''">
                AND (
                title LIKE CONCAT('%', #{searchValue}, '%') OR
                teacherId LIKE CONCAT('%', #{searchValue}, '%')
                )
            </if>
        </where>
        ${sortQuery}
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 강좌 등록 -->
    <insert id="insertCourse">
        INSERT INTO tbl_course (category, title, description, teacherId, displayDate, price, thumbnail, status)
        VALUES (#{category}, #{title}, #{description}, #{teacherId}, #{displayDate}, #{price}, #{thumbnail}, 'N')
    </insert>
    <select id="viewMyLastCourse" resultType="inflearn_clone.springboot.domain.CourseVO">
        SELECT * FROM tbl_course
        WHERE teacherId = #{memberId}
        ORDER BY regDate DESC
        LIMIT 1
    </select>
    <update id="finishInsert">
        UPDATE tbl_course
        SET status = 'Y'
        WHERE idx = #{courseIdx}
    </update>

    <update id="updateCourse">
        UPDATE tbl_course
        SET category = #{category},
            title = #{title},
            description = #{description},
            displayDate = #{displayDate},
            price = #{price},
            <if test="thumbnail != null and thumbnail != ''">
                thumbnail = #{thumbnail},
            </if>
            status = 'N',
            modifyDate = NOW()
        WHERE idx = #{idx}
    </update>
</mapper>

