<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="inflearn_clone.springboot.mappers.ReviewMapper">

    <select id="getReviewList" resultType="inflearn_clone.springboot.dto.review.ReviewListDTO">
        SELECT r.idx, r.courseIdx, r.memberId, r.content, r.rating, r.regDate, r.modifyDate, m.name AS memberName
        FROM tbl_review r
        JOIN tbl_member m ON r.memberId = m.memberId
        WHERE r.courseIdx = #{courseIdx}
        ORDER BY
        <choose>
            <when test="sortBy == 'latest'">
                r.regDate DESC
            </when>
            <when test="sortBy == 'rating_desc'">
                r.rating DESC
            </when>
            <when test="sortBy == 'rating_asc'">
                r.rating ASC
            </when>
        </choose>
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 리뷰 등록 -->
    <insert id="insertReview">
        INSERT INTO tbl_review(courseIdx, memberId, content, rating)
        VALUES(#{courseIdx}, #{memberId}, #{content}, #{rating})
    </insert>

    <!-- 리뷰 수정 -->
    <update id="modifyReview">
        UPDATE tbl_review
        SET content = #{content}, rating = #{rating}, modifyDate = NOW()
        WHERE idx = #{idx} AND memberId = #{memberId}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview">
        DELETE FROM tbl_review WHERE idx = #{idx}
    </delete>

<!--    특정글확인-->
    <select id="viewReview">
        SELECT idx, courseIdx, content, rating, memberId
        FROM tbl_review
        WHERE idx=#{idx}
    </select>
</mapper>    